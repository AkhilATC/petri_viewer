import { __decorate } from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import * as MindFusion from 'diagram-library';
var ZoomControl = /** @class */ (function () {
    function ZoomControl() {
        this.enabled = true;
        this.cornerRadius = 2;
        this.padding = 2;
        this.snapToZoomStep = true;
        this.tick_Position = MindFusion.Controls.TickPosition.Left;
        this.show_label = true;
        this.txt_color = "rgba(77,83,94,1)";
        this.sh_color = "gray";
        this.inn_color = "rgba(91,91,91,1)";
        this.br_color = "rgba(77,83,94,1)";
        this.act_Color = "skyBlue";
        this.fl = "#FFFFFF";
        this.back_color = "#FFFFFF";
        this.scr_step = 10;
        this.z_step = 10;
        this.mx_Z_fac = 200;
        this.mn_Z_fac = 0;
        this.z_fac = 100;
    }
    ZoomControl.prototype.ngAfterViewInit = function () {
        if (this.zoom_id === undefined)
            this.zoom_id = "zoomer";
        this.canvas.nativeElement.id = this.zoom_id;
        var zoomer = MindFusion.Controls.ZoomControl.create(document.getElementById(this.zoom_id));
        zoomer.setCornerRadius(this.cornerRadius);
        zoomer.setPadding(this.padding);
        zoomer.setSnapToZoomStep(this.snapToZoomStep);
        zoomer.setTickPosition(this.tick_Position);
        zoomer.setShowLabel(this.show_label);
        zoomer.setTextColor(this.txt_color);
        zoomer.setShadowColor(this.sh_color);
        zoomer.setInnerColor(this.inn_color);
        zoomer.setBorderColor(this.br_color);
        zoomer.setActiveColor(this.act_Color);
        zoomer.setFill(this.fl);
        zoomer.setBackColor(this.back_color);
        zoomer.setScrollStep(this.scr_step);
        zoomer.setZoomStep(this.z_step);
        zoomer.setMaxZoomFactor(this.mx_Z_fac);
        zoomer.setMinZoomFactor(this.mn_Z_fac);
        zoomer.setZoomFactor(this.z_fac);
        zoomer.setEnabled(true);
        zoomer.setTarget(this.diagram);
    };
    __decorate([
        ViewChild('zoomer', { static: true })
    ], ZoomControl.prototype, "canvas", void 0);
    __decorate([
        Input('id')
    ], ZoomControl.prototype, "zoom_id", void 0);
    __decorate([
        Input('diagram')
    ], ZoomControl.prototype, "diagram", void 0);
    __decorate([
        Input('enabled')
    ], ZoomControl.prototype, "enabled", void 0);
    __decorate([
        Input('cornerRadius')
    ], ZoomControl.prototype, "cornerRadius", void 0);
    __decorate([
        Input('padding')
    ], ZoomControl.prototype, "padding", void 0);
    __decorate([
        Input('snapToZoomStep')
    ], ZoomControl.prototype, "snapToZoomStep", void 0);
    __decorate([
        Input('tickPosition')
    ], ZoomControl.prototype, "tick_Position", void 0);
    __decorate([
        Input('showLabel')
    ], ZoomControl.prototype, "show_label", void 0);
    __decorate([
        Input('textColor')
    ], ZoomControl.prototype, "txt_color", void 0);
    __decorate([
        Input('shadowColor')
    ], ZoomControl.prototype, "sh_color", void 0);
    __decorate([
        Input('innerColor')
    ], ZoomControl.prototype, "inn_color", void 0);
    __decorate([
        Input('borderColor')
    ], ZoomControl.prototype, "br_color", void 0);
    __decorate([
        Input('activeColor')
    ], ZoomControl.prototype, "act_Color", void 0);
    __decorate([
        Input("fill")
    ], ZoomControl.prototype, "fl", void 0);
    __decorate([
        Input('backColor')
    ], ZoomControl.prototype, "back_color", void 0);
    __decorate([
        Input('scrollStep')
    ], ZoomControl.prototype, "scr_step", void 0);
    __decorate([
        Input('zoomStep')
    ], ZoomControl.prototype, "z_step", void 0);
    __decorate([
        Input('maxZoomFactor')
    ], ZoomControl.prototype, "mx_Z_fac", void 0);
    __decorate([
        Input('minZoomFactor')
    ], ZoomControl.prototype, "mn_Z_fac", void 0);
    __decorate([
        Input('zoomFactor')
    ], ZoomControl.prototype, "z_fac", void 0);
    ZoomControl = __decorate([
        Component({
            selector: 'zoom-control',
            template: "<div style=\"width: 50px; height: 300px;\">\n                  <canvas #zoomer width=\"50px\" height=\"300px\"></canvas>\n               </div>"
        })
    ], ZoomControl);
    return ZoomControl;
}());
export { ZoomControl };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9vbWVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2RpYWdyYW0tbGlicmFyeS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL3pvb21lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQWlCLEtBQUssRUFBRSxTQUFTLEVBQWMsTUFBTSxlQUFlLENBQUM7QUFDdkYsT0FBTyxLQUFLLFVBQVUsTUFBTSxpQkFBaUIsQ0FBQztBQVE5QztJQUFBO1FBS3NCLFlBQU8sR0FBYSxJQUFJLENBQUM7UUFDcEIsaUJBQVksR0FBWSxDQUFDLENBQUM7UUFDL0IsWUFBTyxHQUFZLENBQUMsQ0FBQztRQUNkLG1CQUFjLEdBQWEsSUFBSSxDQUFDO1FBQ2xDLGtCQUFhLEdBQXNDLFVBQVUsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQztRQUM1RixlQUFVLEdBQWEsSUFBSSxDQUFDO1FBQzVCLGNBQVMsR0FBWSxrQkFBa0IsQ0FBQztRQUN0QyxhQUFRLEdBQVksTUFBTSxDQUFDO1FBQzVCLGNBQVMsR0FBWSxrQkFBa0IsQ0FBQztRQUN2QyxhQUFRLEdBQVcsa0JBQWtCLENBQUM7UUFDdEMsY0FBUyxHQUFZLFNBQVMsQ0FBQztRQUN0QyxPQUFFLEdBQVcsU0FBUyxDQUFDO1FBQ2xCLGVBQVUsR0FBVyxTQUFTLENBQUM7UUFDOUIsYUFBUSxHQUFZLEVBQUUsQ0FBQztRQUN6QixXQUFNLEdBQVksRUFBRSxDQUFDO1FBQ2hCLGFBQVEsR0FBWSxHQUFHLENBQUM7UUFDeEIsYUFBUSxHQUFZLENBQUMsQ0FBQztRQUN6QixVQUFLLEdBQVcsR0FBRyxDQUFDO0lBZ0M3QyxDQUFDO0lBNUJHLHFDQUFlLEdBQWY7UUFFSSxJQUFHLElBQUksQ0FBQyxPQUFPLEtBQUssU0FBUztZQUN6QixJQUFJLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQztRQUU1QixJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FB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QUFDO2lEQUF3QjtJQUN6QjtRQUFsQixLQUFLLENBQUMsVUFBVSxDQUFDOytDQUFzQjtJQUNoQjtRQUF2QixLQUFLLENBQUMsZUFBZSxDQUFDO2lEQUF5QjtJQUN4QjtRQUF2QixLQUFLLENBQUMsZUFBZSxDQUFDO2lEQUF1QjtJQUN6QjtRQUFwQixLQUFLLENBQUMsWUFBWSxDQUFDOzhDQUFxQjtJQXRCaEMsV0FBVztRQU52QixTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsY0FBYztZQUN4QixRQUFRLEVBQUUsaUpBRVE7U0FDckIsQ0FBQztPQUNXLFdBQVcsQ0FzRHZCO0lBQUQsa0JBQUM7Q0FBQSxBQXRERCxJQXNEQztTQXREWSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBBZnRlclZpZXdJbml0LCBJbnB1dCwgVmlld0NoaWxkLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCAqIGFzIE1pbmRGdXNpb24gZnJvbSAnZGlhZ3JhbS1saWJyYXJ5JztcclxuaW1wb3J0IERpYWdyYW0gPSBNaW5kRnVzaW9uLkRpYWdyYW1taW5nLkRpYWdyYW07XHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd6b29tLWNvbnRyb2wnLFxyXG4gICAgdGVtcGxhdGU6IGA8ZGl2IHN0eWxlPVwid2lkdGg6IDUwcHg7IGhlaWdodDogMzAwcHg7XCI+XHJcbiAgICAgICAgICAgICAgICAgIDxjYW52YXMgI3pvb21lciB3aWR0aD1cIjUwcHhcIiBoZWlnaHQ9XCIzMDBweFwiPjwvY2FudmFzPlxyXG4gICAgICAgICAgICAgICA8L2Rpdj5gXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBab29tQ29udHJvbCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXR7XHJcblxyXG4gICAgQFZpZXdDaGlsZCgnem9vbWVyJywgeyBzdGF0aWM6IHRydWUgfSkgY2FudmFzOiBFbGVtZW50UmVmPEhUTUxDYW52YXNFbGVtZW50PjtcclxuICAgIEBJbnB1dCgnaWQnKSB6b29tX2lkIDogc3RyaW5nO1xyXG4gICAgQElucHV0KCdkaWFncmFtJykgZGlhZ3JhbSA6IERpYWdyYW07XHJcbiAgICBASW5wdXQoJ2VuYWJsZWQnKSBlbmFibGVkIDogYm9vbGVhbiA9IHRydWU7XHJcbiAgICBASW5wdXQoJ2Nvcm5lclJhZGl1cycpIGNvcm5lclJhZGl1cyA6IG51bWJlciA9IDI7XHJcbiAgICBASW5wdXQoJ3BhZGRpbmcnKSBwYWRkaW5nIDogbnVtYmVyID0gMjtcclxuICAgIEBJbnB1dCgnc25hcFRvWm9vbVN0ZXAnKSBzbmFwVG9ab29tU3RlcCA6IGJvb2xlYW4gPSB0cnVlO1xyXG4gICAgQElucHV0KCd0aWNrUG9zaXRpb24nKSB0aWNrX1Bvc2l0aW9uIDogTWluZEZ1c2lvbi5Db250cm9scy5UaWNrUG9zaXRpb24gPSBNaW5kRnVzaW9uLkNvbnRyb2xzLlRpY2tQb3NpdGlvbi5MZWZ0O1xyXG4gICAgQElucHV0KCdzaG93TGFiZWwnKSBzaG93X2xhYmVsIDogYm9vbGVhbiA9IHRydWU7XHJcbiAgICBASW5wdXQoJ3RleHRDb2xvcicpIHR4dF9jb2xvciA6IHN0cmluZyA9IFwicmdiYSg3Nyw4Myw5NCwxKVwiO1xyXG4gICAgQElucHV0KCdzaGFkb3dDb2xvcicpIHNoX2NvbG9yIDogc3RyaW5nID0gXCJncmF5XCI7XHJcbiAgICBASW5wdXQoJ2lubmVyQ29sb3InKSBpbm5fY29sb3IgOiBzdHJpbmcgPSBcInJnYmEoOTEsOTEsOTEsMSlcIjtcclxuICAgIEBJbnB1dCgnYm9yZGVyQ29sb3InKSBicl9jb2xvciA6c3RyaW5nID0gXCJyZ2JhKDc3LDgzLDk0LDEpXCI7XHJcbiAgICBASW5wdXQoJ2FjdGl2ZUNvbG9yJykgYWN0X0NvbG9yIDogc3RyaW5nID0gXCJza3lCbHVlXCI7XHJcbiAgICBASW5wdXQoXCJmaWxsXCIpIGZsOiBzdHJpbmcgPSBcIiNGRkZGRkZcIjtcclxuICAgIEBJbnB1dCgnYmFja0NvbG9yJykgYmFja19jb2xvcjogc3RyaW5nID0gXCIjRkZGRkZGXCI7XHJcbiAgICBASW5wdXQoJ3Njcm9sbFN0ZXAnKSBzY3Jfc3RlcCA6IG51bWJlciA9IDEwO1xyXG4gICAgQElucHV0KCd6b29tU3RlcCcpIHpfc3RlcCA6IG51bWJlciA9IDEwO1xyXG4gICAgQElucHV0KCdtYXhab29tRmFjdG9yJykgbXhfWl9mYWMgOiBudW1iZXIgPSAyMDA7XHJcbiAgICBASW5wdXQoJ21pblpvb21GYWN0b3InKSBtbl9aX2ZhYyA6IG51bWJlciA9IDA7XHJcbiAgICBASW5wdXQoJ3pvb21GYWN0b3InKSB6X2ZhYzogbnVtYmVyID0gMTAwO1xyXG5cclxuXHJcblxyXG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWR7XHJcblxyXG4gICAgICAgIGlmKHRoaXMuem9vbV9pZCA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICB0aGlzLnpvb21faWQgPSBcInpvb21lclwiO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuY2FudmFzLm5hdGl2ZUVsZW1lbnQuaWQgPSB0aGlzLnpvb21faWQ7ICAgIFxyXG4gICAgICAgIHZhciB6b29tZXIgPSBNaW5kRnVzaW9uLkNvbnRyb2xzLlpvb21Db250cm9sLmNyZWF0ZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLnpvb21faWQpKTtcclxuICAgICAgICB6b29tZXIuc2V0Q29ybmVyUmFkaXVzKHRoaXMuY29ybmVyUmFkaXVzKTtcclxuICAgICAgICB6b29tZXIuc2V0UGFkZGluZyh0aGlzLnBhZGRpbmcpO1xyXG4gICAgICAgIHpvb21lci5zZXRTbmFwVG9ab29tU3RlcCh0aGlzLnNuYXBUb1pvb21TdGVwKTtcclxuICAgICAgICB6b29tZXIuc2V0VGlja1Bvc2l0aW9uKHRoaXMudGlja19Qb3NpdGlvbik7XHJcbiAgICAgICAgem9vbWVyLnNldFNob3dMYWJlbCh0aGlzLnNob3dfbGFiZWwpO1xyXG4gICAgICAgIHpvb21lci5zZXRUZXh0Q29sb3IodGhpcy50eHRfY29sb3IpO1xyXG4gICAgICAgIHpvb21lci5zZXRTaGFkb3dDb2xvcih0aGlzLnNoX2NvbG9yKTtcclxuICAgICAgICB6b29tZXIuc2V0SW5uZXJDb2xvcih0aGlzLmlubl9jb2xvcik7XHJcbiAgICAgICAgem9vbWVyLnNldEJvcmRlckNvbG9yKHRoaXMuYnJfY29sb3IpO1xyXG4gICAgICAgIHpvb21lci5zZXRBY3RpdmVDb2xvcih0aGlzLmFjdF9Db2xvcik7XHJcbiAgICAgICAgem9vbWVyLnNldEZpbGwodGhpcy5mbCk7XHJcbiAgICAgICAgem9vbWVyLnNldEJhY2tDb2xvcih0aGlzLmJhY2tfY29sb3IpO1xyXG4gICAgICAgIHpvb21lci5zZXRTY3JvbGxTdGVwKHRoaXMuc2NyX3N0ZXApO1xyXG4gICAgICAgIHpvb21lci5zZXRab29tU3RlcCh0aGlzLnpfc3RlcCk7XHJcbiAgICAgICAgem9vbWVyLnNldE1heFpvb21GYWN0b3IodGhpcy5teF9aX2ZhYyk7XHJcbiAgICAgICAgem9vbWVyLnNldE1pblpvb21GYWN0b3IodGhpcy5tbl9aX2ZhYyk7XHJcbiAgICAgICAgem9vbWVyLnNldFpvb21GYWN0b3IodGhpcy56X2ZhYyk7XHJcbiAgICAgICAgem9vbWVyLnNldEVuYWJsZWQodHJ1ZSk7XHJcbiAgICAgICAgem9vbWVyLnNldFRhcmdldCh0aGlzLmRpYWdyYW0pO1xyXG5cclxuICAgIH1cclxufSJdfQ==