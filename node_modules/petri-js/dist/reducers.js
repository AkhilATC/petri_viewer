'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _redux = require('redux');

var _reduxUndo = require('redux-undo');

var _reduxUndo2 = _interopRequireDefault(_reduxUndo);

var _actions = require('./actions');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var initialModel = { places: [], transitions: [], m0: {} };
var model = function model() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialModel;
  var action = arguments[1];

  switch (action.type) {
    case _actions.actionTypes.INIT:
      return action.payload.model;
    default:
      return state;
  }
};

var marking = function marking() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var action = arguments[1];

  switch (action.type) {
    case _actions.actionTypes.INIT:
      return action.payload.model.m0;
    case _actions.actionTypes.FIRE:
      return action.payload.nextMarking;
    default:
      return state;
  }
};

var sequence = function sequence() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var action = arguments[1];

  switch (action.type) {
    case _actions.actionTypes.INIT:
      return [];
    case _actions.actionTypes.FIRE:
      return state.concat([{
        transition: action.payload.transition.name,
        binding: action.payload.binding
      }]);
    default:
      return state;
  }
};

exports.default = (0, _redux.combineReducers)({
  model: model,
  marking: (0, _reduxUndo2.default)(marking),
  sequence: (0, _reduxUndo2.default)(sequence)
});