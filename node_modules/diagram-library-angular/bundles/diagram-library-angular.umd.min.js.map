{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://diagram-library-angular/lib/diagram-library-angular.component.ts","ng://diagram-library-angular/lib/node-list-view.component.ts","ng://diagram-library-angular/lib/overview.component.ts","ng://diagram-library-angular/lib/ruler.component.ts","ng://diagram-library-angular/lib/zoomer.component.ts","ng://diagram-library-angular/lib/diagram-library-angular.module.ts","ng://diagram-library-angular/lib/common.component.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DiagramView","this","inplaceEdit","enabled","roundedLinks","routeLinks","showGrid","autoResize","MindFusion.Diagramming","AutoResize","None","behavior","Behavior","LinkShapes","linkShape","LinkShape","Polyline","showAnchors","ShowAnchors","Auto","defaultShape","linkHeadShapeSize","nodeCreated","EventEmitter","initializeLink","initializeNode","linkClicked","linkCreated","linkDeleted","linkDoubleClicked","linkModified","linkPointed","linkTextEdited","nodeClicked","nodeDeleted","nodeDoubleClicked","nodeModified","nodePointed","nodeTextEdited","linkCreating","linkDeleting","linkModifying","nodeCreating","nodeDeleting","nodeModifying","containerChildAdded","containerChildAdding","containerChildRemoving","containerChildRemoved","containerFolded","containerUnfolded","treeExpanded","treeCollapsed","selectionModifying","repaint","sizeChanged","nodeSelected","nodeDeselected","linkSelected","linkDeselected","controlLoaded","hitTestAdjustmentHandles","drawAdjustmentHandles","clicked","enterInplaceEditMode","leaveInplaceEditMode","createEditControl","cellTextEdited","laneGridCellTextEdited","serializeTag","deserializeTag","tableColumnResizing","tableColumnResized","tableRowResizing","tableRowResized","nodePasted","linkPasted","headerStartResizing","headerResized","itemAdded","itemRemoved","animatedLayoutCompleted","hyperlinkClicked","expandButtonClicked","prototype","ngOnInit","undefined","passedID","canvas","nativeElement","id","MindFusion.AbstractionLayer","attachControl","diagram","document","getElementById","setAllowInplaceEdit","setAutoResize","setBackBrush","backBrush","setBehavior","setDefaultShape","Shape","fromId","setEnabled","setLinkHeadShapeSize","setLinkShape","setRoundedLinks","setRouteLinks","setShowAnchors","setShowGrid","events","Events","v","addAndDelegate","event","prop","addEventListener","sender","args","get","emit","ngOnDestroy","dispose","ViewChild","static","Input","Output","Component","selector","template","NodeListView","icon_size","MindFusion.Drawing","Size","node_size","padding","orientation","Orientation","Vertical","tooltipDelay","shapeLibraryLocation","ngAfterViewInit","node_id","nodeList","create","setIconSize","setDefaultNodeSize","setPadding","setOrientation","setShapeLibraryLocation","setTooltipDelay","addNode","nodes","caption","Overview","allow_zoom","back_color","scale_factor","auto_s_amount","scale_mode","ScaleMode","FitAll","view_id","overview","setDiagram","setAllowZoom","setScaleFactor","setAutoScrollAmount","setScaleMode","setBackColor","Ruler","gr_unit","GraphicsUnit","Millimeter","en_guides","vert_visible","hor_visible","pointer_color","text_color","guide_color","projection_color","fore_Color","ngAfterContentInit","ruler_id","div_id","ruler","input","console","error","setUnit","setEnableGuides","setProjectRotatedBounds","pr_bounds","setNegatedX","neg_x","setNegatedY","neg_y","setVerticalScaleVisible","setHorizontalScaleVisible","setPointerColor","setTextColor","setGuideColor","setProjectionColor","setForeColor","ContentChild","ZoomControl","cornerRadius","snapToZoomStep","tick_Position","MindFusion.Controls","TickPosition","Left","show_label","txt_color","sh_color","inn_color","br_color","act_Color","fl","scr_step","z_step","mx_Z_fac","mn_Z_fac","z_fac","zoom_id","zoomer","setCornerRadius","setSnapToZoomStep","setTickPosition","setShowLabel","setShadowColor","setInnerColor","setBorderColor","setActiveColor","setFill","setScrollStep","setZoomStep","setMaxZoomFactor","setMinZoomFactor","setZoomFactor","setTarget","AngularDiagram","NgModule","declarations","imports","exports","Common","MCommon"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, OnInit, OnDestroy, ViewChild, Input, Output, EventEmitter, ElementRef } from '@angular/core';\nimport * as Common from 'mindfusion-common';\nimport * as MindFusion from 'diagram-library';\n\nimport Diagram = MindFusion.Diagramming.Diagram;\n\n@Component({\n  selector: 'diagram-view',\n  template: `\n    <div style=\"position: absolute; overflow: auto; width: auto; height: auto; top: 0px; bottom: 0px; left: 0px; right: 0px; text-align: left;\">\n       <canvas #canvas></canvas>\n    </div>`,\n})\nexport class DiagramView implements OnInit, OnDestroy {\n\n  \n  @ViewChild('canvas', { static: true })\n  canvas: ElementRef<HTMLCanvasElement>; \n\n  @Input('id') passedID: string;    \n  @Input(\"diagram\") diagram : Diagram\n  @Input(\"allowInplaceEdit\") inplaceEdit : boolean = false;\n  @Input(\"enabled\") enabled : boolean = true;\n  @Input(\"roundedLinks\") roundedLinks : boolean = false;\n  @Input(\"routeLinks\") routeLinks : boolean = false;\n  @Input(\"showGrid\") showGrid : boolean = false;\n\n  @Input(\"autoResize\") autoResize : MindFusion.Diagramming.AutoResize = MindFusion.Diagramming.AutoResize.None;\n  @Input(\"behavior\") behavior : MindFusion.Diagramming.Behavior = MindFusion.Diagramming.Behavior.LinkShapes;\n  @Input(\"linkShape\") linkShape : MindFusion.Diagramming.LinkShape = MindFusion.Diagramming.LinkShape.Polyline;\n  @Input(\"showAnchors\") showAnchors : MindFusion.Diagramming.ShowAnchors=MindFusion.Diagramming.ShowAnchors.Auto;\n\n  @Input(\"backBrush\") backBrush : string;\n  @Input(\"defaulShape\") defaultShape : string = \"Rectangle\";\n  @Input(\"linkHeadShapeSize\") linkHeadShapeSize : number = 5;\n\n  @Output(\"onNodeCreated\") nodeCreated: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onInitializeLink\") initializeLink: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onInitializeNode\") initializeNode: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkClicked\") linkClicked: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkCreated\") linkCreated: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkDeleted\") linkDeleted: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkDoubleClicked\") linkDoubleClicked: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkModified\") linkModified: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkPointed\") linkPointed: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkTextEdited\") linkTextEdited: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodeClicked\") nodeClicked: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodeDeleted\") nodeDeleted: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodeDoubleClicked\") nodeDoubleClicked: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodeModified\") nodeModified: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodePointed\") nodePointed: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodeTextEdited\") nodeTextEdited: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkCreating\") linkCreating: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkDeleting\") linkDeleting: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkModifying\") linkModifying: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodeCreating\") nodeCreating: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodeDeleting\") nodeDeleting: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodeModifying\") nodeModifying: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onContainerChildAdded\") containerChildAdded: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onContainerChildAdding\") containerChildAdding: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onContainerChildRemoving\") containerChildRemoving: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onContainerChildRemoved\") containerChildRemoved: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onContainerFolded\") containerFolded: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onContainerUnfolded\") containerUnfolded: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onTreeExpanded\") treeExpanded: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onTreeCollapsed\") treeCollapsed: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onSelectionModifying\") selectionModifying: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onRepaint\") repaint: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onSizeChanged\") sizeChanged: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodeSelected\") nodeSelected: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodeDeselected\") nodeDeselected: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkSelected\") linkSelected: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkDeselected\") linkDeselected: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onControlLoaded\") controlLoaded: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onHitTestAdjustmentHandles\") hitTestAdjustmentHandles: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onDrawAdjustmentHandles\") drawAdjustmentHandles: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onClicked\") clicked: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onEnterInplaceEditMode\") enterInplaceEditMode: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLeaveInplaceEditMode\") leaveInplaceEditMode: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onCreateEditControl\") createEditControl: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onCellTextEdited\") cellTextEdited: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLaneGridCellTextEdited\") laneGridCellTextEdited: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onSerializeTag\") serializeTag: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onDeserializeTag\") deserializeTag: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onTableColumnResizing\") tableColumnResizing: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onTableColumnResized\") tableColumnResized: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onTableRowResizing\") tableRowResizing: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onTableRowResized\") tableRowResized: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onNodePasted\") nodePasted: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onLinkPasted\") linkPasted: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onHeaderStartResizing\") headerStartResizing: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onHeaderResized\") headerResized: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onItemAdded\") itemAdded: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onItemRemoved\") itemRemoved: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onAnimatedLayoutCompleted\") animatedLayoutCompleted: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onHyperlinkClicked\") hyperlinkClicked: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n  @Output(\"onExpandButtonClicked\") expandButtonClicked: EventEmitter<{sender : DiagramView, args : any}> = new EventEmitter<{sender : DiagramView, args : any}>();\n\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    // bind properties\n    if(this.passedID === undefined)\n        this.passedID = \"diagram\";\n    this.canvas.nativeElement.id = this.passedID;\n    MindFusion.AbstractionLayer.attachControl(this.diagram, document.getElementById(this.passedID));\n    this.diagram.setAllowInplaceEdit(this.inplaceEdit);\n    this.diagram.setAutoResize(this.autoResize);\n    this.diagram.setBackBrush(this.backBrush);\n    this.diagram.setBehavior(this.behavior);\n    this.diagram.setDefaultShape(MindFusion.Diagramming.Shape.fromId(this.defaultShape))\n    this.diagram.setEnabled(this.enabled)\n    this.diagram.setLinkHeadShapeSize(this.linkHeadShapeSize);\n    this.diagram.setLinkShape(this.linkShape);\n    this.diagram.setRoundedLinks(this.roundedLinks)\n    this.diagram.setRouteLinks(this.routeLinks)\n    this.diagram.setShowAnchors(this.showAnchors);\n    this.diagram.setShowGrid(this.showGrid);\n    // bind events\n    var events = MindFusion.Diagramming.Events;\n    for(var v in events){\n      function addAndDelegate(event, prop){\n        prop.diagram.addEventListener(event, (sender, args) => {\n          let emitter = Reflect.get(prop, event);\n          emitter.emit({sender, args});\n        });\n      }\n      addAndDelegate(v, this);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if(this.diagram){\n      this.diagram.dispose();\n    }\n  }\n\n}\n","import {Component, AfterViewInit, Input, ViewChild, ElementRef} from '@angular/core';\r\nimport * as MindFusion from 'diagram-library';\r\nimport NodeList = MindFusion.Diagramming.NodeListView;\r\n\r\n@Component({\r\n    selector: 'node-list-view',\r\n    template: `<div style=\"overflow-y: auto; overflow-x: hidden; width: 230px; height: 200px;\">\r\n                 <canvas #nodeList width=\"230\" height=\"200\" ></canvas>\r\n               </div>`\r\n})\r\nexport class NodeListView implements AfterViewInit{\r\n\r\n    @ViewChild('nodeList', { static: true }) canvas: ElementRef<HTMLCanvasElement>;\r\n    @Input('id') node_id: string;\r\n    @Input('enabled') enabled: boolean = true;\r\n    @Input('iconSize') icon_size : MindFusion.Drawing.Size = new MindFusion.Drawing.Size(24,24);\r\n    @Input('defaultNodeSize') node_size : MindFusion.Drawing.Size = new MindFusion.Drawing.Size(24,24);\r\n    @Input('padding') padding: number = 5;\r\n    @Input('orientation') orientation : MindFusion.Diagramming.Orientation = MindFusion.Diagramming.Orientation.Vertical;\r\n    @Input('tooltipDelay') tooltipDelay : number = 1000;\r\n    @Input('shapeLibraryLocation') shapeLibraryLocation : string =\"\";\r\n    @Input('captions') caption : string[];\r\n    @Input('nodes') nodes : MindFusion.Diagramming.DiagramItem[];\r\n\r\n    nodeList : NodeList;\r\n\r\n    ngAfterViewInit(): void{\r\n\r\n        if(this.node_id === undefined)\r\n            this.node_id = \"nodeList\";\r\n\r\n        this.canvas.nativeElement.id = this.node_id;    \r\n        this.nodeList = MindFusion.Diagramming.NodeListView.create(document.getElementById(this.node_id));\r\n        this.nodeList.setEnabled(this.enabled);\r\n        this.nodeList.setIconSize(this.icon_size);\r\n        this.nodeList.setDefaultNodeSize(this.node_size);\r\n        this.nodeList.setPadding(this.padding);\r\n        this.nodeList.setOrientation(this.orientation);\r\n        this.nodeList.setShapeLibraryLocation(this.shapeLibraryLocation);\r\n        this.nodeList.setTooltipDelay(this.tooltipDelay)\r\n        this.addNode(this.nodes, this.caption);\r\n\r\n    }\r\n\r\n    private addNode(nodes, caption) {\r\n\r\n        for (var i = 0; i < nodes.length; ++i) {\r\n            this.nodeList.addNode(nodes[i], caption[i]);\r\n        }\r\n    }\r\n}","import { Component, AfterViewInit, ViewChild, ElementRef, Input } from '@angular/core'\r\nimport * as MindFusion from 'diagram-library';\r\nimport Diagram = MindFusion.Diagramming.Diagram;\r\n\r\n\r\n@Component({\r\n    selector: 'overview',\r\n    template: `<div style=\" width: 200px; height: 200px; \">\r\n                 <canvas #overview width=\"200\" height=\"200\"></canvas>\r\n               </div>`\r\n\r\n})\r\nexport class Overview implements AfterViewInit {\r\n\r\n\r\n    @ViewChild('overview', { static: true }) canvas: ElementRef<HTMLCanvasElement>;\r\n    @Input('id') view_id: string;\r\n    @Input('diagram') diagram: Diagram;\r\n    @Input('enabled') enabled: boolean = true;\r\n    @Input('allowZoom') allow_zoom: boolean = false;\r\n    @Input('backColor') back_color: string = \"#FFFFFF\";\r\n    @Input('scaleFactor') scale_factor: number = 17.825311942959;\r\n    @Input('autoScrollAmount') auto_s_amount: number = 0;\r\n    @Input('scaleMode') scale_mode: MindFusion.Diagramming.ScaleMode = MindFusion.Diagramming.ScaleMode.FitAll;\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n        if (this.view_id === undefined)\r\n            this.view_id = \"overview\";\r\n\r\n        this.canvas.nativeElement.id = this.view_id;\r\n        var overview = MindFusion.Diagramming.Overview.create(document.getElementById(this.view_id));\r\n        overview.setDiagram(this.diagram);\r\n        overview.setEnabled(this.enabled);\r\n        overview.setAllowZoom(this.allow_zoom);\r\n        overview.setScaleFactor(this.scale_factor);\r\n        overview.setAutoScrollAmount(this.auto_s_amount);\r\n        overview.setScaleMode(this.scale_mode);\r\n        overview.setBackColor(this.back_color);\r\n\r\n    }\r\n}\r\n","import { Component, OnInit, ContentChild, AfterContentInit, Input, ViewChild, ElementRef } from '@angular/core'\r\nimport * as MindFusion from 'diagram-library';\r\nimport { DiagramView } from './diagram-library-angular.component';\r\n\r\n@Component({\r\n    selector: 'ruler',\r\n    template: `<div #id>\r\n                   <ng-content></ng-content>\r\n               </div>`\r\n})\r\nexport class Ruler implements AfterContentInit {\r\n\r\n    @ContentChild(DiagramView) input: DiagramView;\r\n    @ViewChild('id', { static: true }) div_id: ElementRef<HTMLDivElement>;\r\n    @Input('unit') gr_unit: MindFusion.Drawing.GraphicsUnit = MindFusion.Drawing.GraphicsUnit.Millimeter;\r\n\r\n    @Input('enableGuides') en_guides: boolean = true;\r\n    @Input('projectRotatedBounds') pr_bounds: boolean;\r\n    @Input('negatedY') neg_y: boolean;\r\n    @Input('negatedX') neg_x: boolean;\r\n    @Input('verticalScaleVisible') vert_visible: boolean = true;\r\n    @Input('horizontalScaleVisible') hor_visible: boolean = true;\r\n\r\n    @Input('id') ruler_id: string;\r\n    @Input('pointerColor') pointer_color: string = \"red\";\r\n    @Input('textColor') text_color: string = \"#000000\";\r\n    @Input('guideColor') guide_color: string = \"#000000\";\r\n    @Input('projectionColor') projection_color: string = \"lightSteelBlue\";\r\n    @Input('backColor') back_color: string = \"#dddddd\";\r\n    @Input('foreColor') fore_Color: string = \"#000000\";\r\n\r\n\r\n    ngAfterContentInit(): void {\r\n\r\n\r\n        if (this.ruler_id === undefined)\r\n            this.ruler_id = \"ruler\";\r\n        this.div_id.nativeElement.id = this.ruler_id;\r\n        var ruler = new MindFusion.Diagramming.Ruler(document.getElementById(this.ruler_id));\r\n        if (this.input && (this.input instanceof DiagramView)) {\r\n            ruler.setDiagram(this.input.diagram);\r\n        } else {\r\n            console.error('ruler requirs diagram-view');\r\n        }\r\n\r\n        ruler.setUnit(this.gr_unit);\r\n        ruler.setEnableGuides(this.en_guides);\r\n        ruler.setProjectRotatedBounds(this.pr_bounds);\r\n        ruler.setNegatedX(this.neg_x);\r\n        ruler.setNegatedY(this.neg_y);\r\n        ruler.setVerticalScaleVisible(this.vert_visible);\r\n        ruler.setHorizontalScaleVisible(this.hor_visible);\r\n        ruler.setPointerColor(this.pointer_color);\r\n        ruler.setTextColor(this.text_color);\r\n        ruler.setGuideColor(this.guide_color);\r\n        ruler.setProjectionColor(this.projection_color);\r\n        ruler.setBackColor(this.back_color);\r\n        ruler.setForeColor(this.fore_Color);\r\n\r\n\r\n    }\r\n\r\n}","import { Component, AfterViewInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport * as MindFusion from 'diagram-library';\r\nimport Diagram = MindFusion.Diagramming.Diagram;\r\n@Component({\r\n    selector: 'zoom-control',\r\n    template: `<div style=\"width: 50px; height: 300px;\">\r\n                  <canvas #zoomer width=\"50px\" height=\"300px\"></canvas>\r\n               </div>`\r\n})\r\nexport class ZoomControl implements AfterViewInit{\r\n\r\n    @ViewChild('zoomer', { static: true }) canvas: ElementRef<HTMLCanvasElement>;\r\n    @Input('id') zoom_id : string;\r\n    @Input('diagram') diagram : Diagram;\r\n    @Input('enabled') enabled : boolean = true;\r\n    @Input('cornerRadius') cornerRadius : number = 2;\r\n    @Input('padding') padding : number = 2;\r\n    @Input('snapToZoomStep') snapToZoomStep : boolean = true;\r\n    @Input('tickPosition') tick_Position : MindFusion.Controls.TickPosition = MindFusion.Controls.TickPosition.Left;\r\n    @Input('showLabel') show_label : boolean = true;\r\n    @Input('textColor') txt_color : string = \"rgba(77,83,94,1)\";\r\n    @Input('shadowColor') sh_color : string = \"gray\";\r\n    @Input('innerColor') inn_color : string = \"rgba(91,91,91,1)\";\r\n    @Input('borderColor') br_color :string = \"rgba(77,83,94,1)\";\r\n    @Input('activeColor') act_Color : string = \"skyBlue\";\r\n    @Input(\"fill\") fl: string = \"#FFFFFF\";\r\n    @Input('backColor') back_color: string = \"#FFFFFF\";\r\n    @Input('scrollStep') scr_step : number = 10;\r\n    @Input('zoomStep') z_step : number = 10;\r\n    @Input('maxZoomFactor') mx_Z_fac : number = 200;\r\n    @Input('minZoomFactor') mn_Z_fac : number = 0;\r\n    @Input('zoomFactor') z_fac: number = 100;\r\n\r\n\r\n\r\n    ngAfterViewInit(): void{\r\n\r\n        if(this.zoom_id === undefined)\r\n            this.zoom_id = \"zoomer\";\r\n        \r\n        this.canvas.nativeElement.id = this.zoom_id;    \r\n        var zoomer = MindFusion.Controls.ZoomControl.create(document.getElementById(this.zoom_id));\r\n        zoomer.setCornerRadius(this.cornerRadius);\r\n        zoomer.setPadding(this.padding);\r\n        zoomer.setSnapToZoomStep(this.snapToZoomStep);\r\n        zoomer.setTickPosition(this.tick_Position);\r\n        zoomer.setShowLabel(this.show_label);\r\n        zoomer.setTextColor(this.txt_color);\r\n        zoomer.setShadowColor(this.sh_color);\r\n        zoomer.setInnerColor(this.inn_color);\r\n        zoomer.setBorderColor(this.br_color);\r\n        zoomer.setActiveColor(this.act_Color);\r\n        zoomer.setFill(this.fl);\r\n        zoomer.setBackColor(this.back_color);\r\n        zoomer.setScrollStep(this.scr_step);\r\n        zoomer.setZoomStep(this.z_step);\r\n        zoomer.setMaxZoomFactor(this.mx_Z_fac);\r\n        zoomer.setMinZoomFactor(this.mn_Z_fac);\r\n        zoomer.setZoomFactor(this.z_fac);\r\n        zoomer.setEnabled(true);\r\n        zoomer.setTarget(this.diagram);\r\n\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { DiagramView } from './diagram-library-angular.component';\nimport {NodeListView} from './node-list-view.component';\nimport {Overview} from './overview.component';\nimport {Ruler} from './ruler.component';\nimport {ZoomControl} from './zoomer.component'\n\n\n\n@NgModule({\n  declarations: [DiagramView, NodeListView, Overview, Ruler, ZoomControl],\n  imports: [\n  ],\n  exports: [DiagramView, NodeListView, Ruler, Overview, ZoomControl]\n})\nexport  class AngularDiagram { }\n","import * as MCommon from 'mindfusion-common';\r\n\r\nexport const Common : (typeof MCommon) = MCommon as any;"]}